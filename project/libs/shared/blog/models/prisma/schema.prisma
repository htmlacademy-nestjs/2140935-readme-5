// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output = "../../../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id             String @id @default(uuid()) @map("id")
  originalId     String @map("original_id")
  isRepost       Boolean @map("is_repost")
  isDraft        Boolean @map("is_draft")
  type           String
  title          String
  description    String
  video          String
  quote          String
  quoteAuthor    String @map("quote_author")
  content        String
  url            String
  likesCount     Int @map("likes_count")
  commentsCount  Int @map("comments_count")
  tags           Tag[]
  comments       Comment[]
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  originalAuthor String @map("original_author")
  userId         String @map("user_id")

  @@index([title])
  @@map("posts")
}

model Tag {
  id        String  @id @default(uuid())
  title     String
  posts     Post[]
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  @@index([title])
  @@map("tags")
}

model Comment {
  id          String    @id @default(uuid())
  message     String
  userId      String    @map("user_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId      String    @map("post_id")
  @@index([postId])
  @@map("comments")
}
